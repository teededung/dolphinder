---
import MainLayout from "../../components/MainLayout.astro";
import ProfileCard from "../../components/shared/ProfileCard";
import OnchainProfileWrapper from "../../components/onchain/OnchainProfileWrapper";
import WelcomeBanner from "../../components/shared/profile/WelcomeBanner";
import PendingVerificationBanner from "../../components/shared/profile/PendingVerificationBanner";
import { createSupabaseServerClient } from "../../lib/supabase/serverClient";
import { getDeveloperByUsername, getCurrentUser } from "../../lib/auth";

export const prerender = false;

const { username } = Astro.params;

// Get developer from Supabase database
const supabase = createSupabaseServerClient(Astro.cookies as any);
const currentUser = await getCurrentUser(supabase);
const developer = await getDeveloperByUsername(supabase, username || "");

// Redirect to developers list if profile not found
if (!developer) {
  return Astro.redirect("/developers");
}

// Check if user is the owner of this profile
const isOwner = currentUser && currentUser.id === developer.user_id;

// Only show if verified OR if owner viewing their own profile
if (!developer.is_verified && !isOwner) {
  return Astro.redirect("/developers");
}

// Check if this is a welcome redirect
const isWelcome = Astro.url.searchParams.get("welcome") === "true";

// Map database structure to component props
const dev = {
  name: developer.name,
  username: developer.username,
  avatar: developer.avatar || "",
  bio: developer.bio || "",
  github: developer.github || "",
  linkedin: developer.linkedin || "",
  telegram: developer.telegram || "",
  website: developer.website || "",
  slushWallet: developer.slush_wallet || "",
  entry: developer.entry || "",
  projects: developer.projects || [],
  certificates: developer.certificates || [],
  walrusBlobId: developer.walrus_blob_id || null,
};
---

<MainLayout title={`${dev.name} - Developer Profile`}>
  <div class="min-h-screen pt-20">
    <div class="container mx-auto px-4 py-8">
      <!-- Welcome Banner -->
      {isWelcome && isOwner && <WelcomeBanner client:only="react" />}

      <!-- Pending Verification Banner -->
      {
        isOwner && developer && !developer.is_verified && !isWelcome && (
          <PendingVerificationBanner client:only="react" />
        )
      }

      <!-- Profile Card -->
      <div class="mx-auto max-w-2xl">
        <div
          class="relative rounded-xl border border-white/10 bg-white/5 p-8 text-center backdrop-blur-sm"
        >
          <!-- Offchain profile (shown immediately) -->
          <div id="static-profile">
            <ProfileCard
              client:only="react"
              variant={dev.walrusBlobId ? "onchain" : "offchain"}
              name={dev.name}
              username={dev.username}
              avatar={dev.avatar}
              bio={dev.bio}
              entry={dev.entry}
              github={dev.github}
              linkedin={dev.linkedin}
              telegram={dev.telegram}
              website={dev.website}
              walletAddress={dev.slushWallet}
              projects={dev.projects}
              certificates={dev.certificates}
              showEditButton={isOwner || undefined}
              isOwner={isOwner || undefined}
            />
          </div>

          <!-- Onchain profile overlay (loads in background) -->
          <div id="onchain-profile" style="display:none">
            <OnchainProfileWrapper
              client:only="react"
              username={dev.username}
              showEditButton={isOwner || undefined}
            />
          </div>
        </div>
      </div>
    </div>
  </div>
</MainLayout>
